---
title: "Mini Project #3"
---

# Is the Electoral College Really Fair?

In this project we aim to analyze the electoral system for President in the United States, this being the unorthodox Electoral College system. Where as most democratic countries elect leaders based off of some popular vote, in the United States it is based off a form of representative system. In each state, citizens vote for electors who pledge to vote for one candidate or another. This strange system induces results where the candidate who may win the popular vote is not guaranteed to win the Electoral College. In this analysis we aim to see how fair this system really is and whether another method of calculating votes would be better.

## Task 1

In our first task, we aim to create a function to automate the process of downloading our shape files for the US congressional districts. We can do this simply by iterating over a range of numbers that represent which editions of congress we'd like to look at.

```{r output = FALSE}
#| code-fold: true
library(tidyverse)
library(ggrepel)
options(dplyr.summarise.inform = FALSE)
options()
library(DT)
get_district_files <- function(x, y){
  base_url <- "https://cdmaps.polisci.ucla.edu/shp/"
  for(num in x:y) {
    if (num < 10) {
      ext <- paste0("districts00", num, ".zip")
    }
    else if (num < 100) {
      ext <- paste0("districts0", num, ".zip")
    }
    else {
      ext <- paste0("districts", num, ".zip")
    }
    if (!file.exists(ext)){
      url <- paste0(base_url, ext)
      download.file(url, 
                    destfile = ext)
    }
  }
}
get_district_files(95, 114)
```

## Task 2

With our previous function we only acquired the congress shape files from 1976 to 2012. Now we need to download and extract the files from 2014 to 2022. We have to get that from a different source, the US Census Bureau, and utilize a different function to automate the downloading process. This is simple and similar to the last function we created.

```{r}
#| code-fold: true
get_tiger_files <- function(x, y){
  base_url <- "https://www2.census.gov/geo/tiger/"
  for(year in x:y) {
    if (year %in% 2014:2015) {
      ext <- paste0("TIGER", year, "/CD/", "tl_", year, "_us_cd114.zip")
    }
    else if (year %in% 2016:2017) {
      ext <- paste0("TIGER", year, "/CD/", "tl_", year, "_us_cd115.zip")
    }
    else if (year %in% 2018:2022) {
      ext <- paste0("TIGER", year, "/CD/", "tl_", year, "_us_cd116.zip")
    }
    if (!file.exists(paste0(year, "congressDistrict.zip"))){
      url <- paste0(base_url, ext)
      download.file(url, 
                    destfile = paste0(year, "congressDistrict.zip"))
    }
  }
}

get_tiger_files(2014, 2022)
```

## Task 3

Now that we have our data, lets dig a little deeper and analyze what we have so far. The first topic is interesting, as the census gets counted each iteration, the amount of representatives per state may change as populations shift between states.

### Which states have gained and lost the most seats in the US House of Representatives between 1976 and 2022?

```{r warning=FALSE}
#| code-fold: true
house <- read.csv("1976-2022-house.csv")
state_districts <- house |> group_by(year, state) |> 
  summarise(num_districts = max(district))
state_districts <- state_districts |> 
  mutate(num_districts = ifelse(num_districts == 0,1,num_districts))
state_districts <- state_districts |> 
  filter(year == 1976 | year == 2022) |> 
  group_by(state) |> 
  mutate(diff = diff(num_districts))
library(forcats)
state_districts |> 
  filter(year == 2022) |> 
  mutate(Color = ifelse(diff < 0, "red", "green")) |> 
  ggplot(aes(diff, fct_reorder(state, diff), fill = Color)) +
  geom_col() +
  labs(x = "Change in Congress Seats from 1976-2022", y = "State") +
  theme_minimal() +
  scale_fill_identity(guide = FALSE)
```

As we can see here, Texas has gained the most where as New York has lost the most.

Another interesting discovery which isn't so obvious, unless like me you are from New York, is the inclusion of fusion voting. This is only really prevalent in New York, where a candidate can appear on multiple ballot lines representing multiple parties. However all the votes for one candidate are coalesced into one count no matter the party.

### Would any Elections be Different Without Fusion Voting?

```{r}
#| code-fold: true
house$district <- str_pad(house$district, width=2, pad="0", side="left")
house$state_fips <- str_pad(house$state_fips, width=2, pad="0", side="left")
house$GEOID <- paste(house$state_fips, house$district, sep="")
house_max <- house |> 
  group_by(candidate, GEOID, year) |> 
  slice(which.max(candidatevotes)) |> 
  group_by(GEOID, year) |> 
  slice(which.max(candidatevotes)) |> 
  select(candidate, GEOID, year, candidatevotes)
house_winner <- house |> 
  group_by(candidate, GEOID, year) |> 
  summarise(candidatevotes = sum(candidatevotes)) |> 
  group_by(GEOID, year) |> 
  slice(which.max(candidatevotes))
anti_join(house_max, house_winner, by = c("candidate", "GEOID", "year")) |> 
  DT::datatable(caption = htmltools::tags$caption(
    style = 'caption-side: bottom; text-align: center;',
    'Table 1: ', htmltools::em('Candidates who won on their major party line but lost due to Fusion Voting.')))
```

Here we can see a list of those such candidates who would have won if it was just Democrat vs Republican. However due to the implementation of fusion voting, this candidate lost. The **GEOID** is a combination of the state ID and district number. 36 is the ID for New York which makes up most of this list.

Lastly it is interesting to take a look at the correlation or lack thereof between votes for a representative in a state and presidential votes in the same state. In other words, how many split-ballots are there?

### Do Americans tend to Vote Down the Line?

```{r}
#| code-fold: true
president <- read.csv("1976-2020-president.csv")
house_party_votes <- house |> 
  group_by(state, year, party) |> 
  summarise(housevotes = sum(candidatevotes)) |> 
  rename(party_detailed = party)
merged <- merge(president, house_party_votes, by = c("state", "year", "party_detailed"))
merged <- merged |> 
  mutate(diff = candidatevotes - housevotes) 
merged |> 
  arrange(desc(diff)) |> 
  DT::datatable()
merged |> 
  group_by(year) |> 
  summarise(diff = sum(diff)/1000) |> 
  ggplot(aes(year, diff)) +
  geom_line() +
  geom_hline(yintercept = 0, color = "red") +
  labs(y = "Difference in Thousands") + 
  theme_minimal()
```

Here the **diff** is:

$Votes for President - Votes for HouseRepresentatives$

So a higher positive number means people voted more for that parties presidential candidate then its house candidates and vice versa for negative numbers. Looking at the data we can see a general trend downward towards not voting for the same candidate president or voting third party. The dip in the 90s can be attributed to prominent third party candidate Ross Perot, where the most recent divide can be attributed to the introduction of Donald Trump which changed the American political landscape.

Notable very successful presidents: Ronald Reagan and Obama over perform their congressional counterparts especially in states like Texas and Florida. On the other hand, to little surprise, 2016 Democratic presidential candidate Hillary Clinton tended to under perform among other poor performing candidates like Walter Mondale and Robert Dole.

## Task 4

Previously in Task 1 and 2 we downloaded alot of shapefiles in zips. Now we need to extract them and read them into R. This can be automated using a function saving alot of manual time.

```{r output = FALSE}
#| code-fold: true
library(sf)
read_shp_from_zip <- function(filename){
  td <- tempdir(); 
  zip_contents <- unzip(filename, 
                        exdir = td)
  fname_shp <- zip_contents[grepl("shp$", zip_contents)]
  sf <- read_sf(fname_shp)
  sf
}
```

## Task 5

Using the function we just created, we can now can access the shape files for the 2000 election. Using that we can create a chloropleth of the 2000 Presidential Election by electoral college results.

```{r}
#| code-fold: true
district106 <- read_shp_from_zip("districts106.zip")
district106 <- district106 |> 
  mutate(geometry = st_make_valid(geometry))
district106 <- district106 |> 
  mutate(geometry = st_transform(geometry, crs = 4326))
states <- district106 |> 
  group_by(STATENAME) |> 
  summarize(geometry = st_union(geometry))
states <- states |> 
  mutate(geometry = st_make_valid(geometry))
states <- states |> 
  mutate(geometry = st_simplify(geometry, dTolerance = 500))
winners2000 <- president |> 
  filter(year == 2000) |> 
  group_by(state) |> 
  slice(which.max(candidatevotes)) |> 
  mutate(state = str_to_title(state)) |> 
  rename(STATENAME = "state") 
electoral <- merge(states, winners2000, by = "STATENAME")
electoral |> 
  mutate(Color = ifelse(party_simplified == "REPUBLICAN", "red", "blue")) |> 
  ggplot(aes(geometry=geometry, fill = Color)) + 
    geom_sf() + 
    coord_sf(xlim = c(-175, -60), ylim = c(20, 75), datum = NA) +
    theme_minimal() +
    scale_fill_identity(guide = FALSE)
```

## Task 6 - Electoral College over Time

Now lets see how the states have shifted election over election.

```{r}
#| code-fold: true
winners <- president |> 
  group_by(state, year) |> 
  slice(which.max(candidatevotes)) |> 
  mutate(state = str_to_title(state)) |> 
  rename(STATENAME = "state") 
electoral2 <- merge(states, winners, by = "STATENAME")
electoral2 |> 
  mutate(Color = ifelse(party_simplified == "REPUBLICAN", "red", "blue")) |> 
  ggplot(aes(geometry=geometry, fill = Color)) + 
  geom_sf() + 
  coord_sf(xlim = c(-175, -60), ylim = c(20, 75), datum = NA) +
  theme_minimal() +
  scale_fill_identity(guide = FALSE) +
  facet_wrap(~year)
```

## Task 7 - Which Electoral College Vote Allocation is the Fairest?

The system in which most states decide to allocate their Electoral Votes, via winner takes all, is of some level of controversy here in America. Importantly, if a candidate receives 49% of votes of a large state like California, but loses out to a candidate with 51% of the votes, that candidate is given no Electoral Votes to show for it. Not only does this distort the Electoral College results versus the overall popular vote, it makes the prospect of a third party candidate almost impossible. If there ever was a way out of picking between Democrat and Republican, it would require an overhaul of how Electoral College votes are allocated. Scenarios where the candidate with the most popular votes loses the Electoral College, while rare, does not paint a good look on American democracy. With that in mind, lets analyze which system would be the fairest. If I had to choose I would distribute electoral college votes proportionally based on a national popular vote, nothing at the state level.

### 1. State-Wide Winner Takes All (Status Quo)

```{r}
#| code-fold: true
ECV <- house |> group_by(year, state) |> 
  summarise(num_districts = max(district),
            electoral_votes = ifelse(as.numeric(num_districts) == 0, 3, as.numeric(num_districts)+2)) |> 
  mutate(state = str_to_title(state)) |> 
  rename(STATENAME = "state")
  
winner_takeall <- merge(ECV, winners, by = c("STATENAME", "year"))
winner_takeall <- winner_takeall |>  
  group_by(year, party_simplified) |> 
  summarise(electoral_votes = sum(electoral_votes))
winner_takeall <- winner_takeall |> 
  mutate(electoral_votes = ifelse(party_simplified == "DEMOCRAT", electoral_votes+3, electoral_votes))
winner_takeall |> 
  ggplot(aes(year, electoral_votes, fill = party_simplified)) +
  geom_col(position = position_dodge(), alpha = .9) +
  geom_label_repel(aes(label = electoral_votes), size = 3, show.legend = FALSE) +
  theme_minimal() +
  labs(title = "Winner Takes All", y = "Electoral Votes", fill = "Party") +
  scale_fill_manual(values = c("blue", "red"), labels = c("Democrat", "Republican"))
```

### 2. District-Wide Winner Takes All + State-Wide 'At-Large' Votes

```{r}
#| code-fold: true
house_winners <- house |> 
  group_by(GEOID, year) |> 
  slice(which.max(candidatevotes)) |> 
  group_by(state, year, party) |> 
  summarise(votes = n()) |> 
  rename(party_simplified = "party")

by_district <- merge(house_winners, president, by = c("state", "year", "party_simplified"))
by_district <- by_district |> 
  left_join(winners, by = c("state_po", "party_simplified", "year"), suffix = c("", "_winner")) |> 
  mutate(votes = ifelse(is.na(candidatevotes_winner), votes, votes+2)) |> 
  group_by(year, party_simplified) |> 
  summarise(electoral_votes = sum(votes))
by_district |> 
  ggplot(aes(year, electoral_votes, fill = party_simplified)) +
  geom_col(position = position_dodge(), alpha = .9) +
  geom_label_repel(aes(label = electoral_votes), size = 3, show.legend = FALSE) +
  theme_minimal() +
  labs(title = "District Wide + State-Wide At Large Votes", y = "Electoral Votes", fill = "Party") +
  scale_fill_manual(values = c("blue", "red"), labels = c("Democrat", "Republican"))
```

### 3. State-Wide Proportional

```{r}
#| code-fold: true
ECV <- ECV |> 
  rename(state = "STATENAME")
president <- president |> 
  mutate(state = str_to_title(state))
prop <- merge(ECV, president, by = c("state", "year"))
prop <- prop |> 
  mutate(ratio = candidatevotes/totalvotes,
         initialvotes = floor(ratio * electoral_votes),
         remainder = ratio * electoral_votes - initialvotes
         ) |> 
  group_by(state, year) |> 
  mutate(remaining = electoral_votes - sum(initialvotes)) |> 
  arrange(desc(remainder)) |> 
  mutate(additional = ifelse(row_number() <= remaining,1,0)) |> 
  mutate(propvotes = initialvotes + additional) |> 
  ungroup()
prop <- prop |> 
  group_by(party_simplified, year) |> 
  summarise(electoral_votes = sum(propvotes))
prop |> 
  ggplot(aes(year, electoral_votes, fill = party_simplified)) +
  geom_col(position = position_dodge(), alpha = .9) +
  geom_label_repel(aes(label = electoral_votes), size = 3, show.legend = FALSE) +
  theme_minimal() +
  labs(title = "State-Wide Proportional", y = "Electoral Votes", fill = "Party") +
  scale_fill_manual(values = c("blue", "yellow", "green", "red"), labels = c("Democrat", "Libertarian", "Other", "Republican"))
```

### 4. National Proportional

```{r}
#| code-fold: true
presidentNational <- president |> 
  group_by(year, candidate, party_simplified) |> 
  summarise(votes = sum (candidatevotes)) |> 
  mutate(total_electoral = 538)
presidentNational <- presidentNational |> 
  group_by(year) |> 
  mutate(total_votes = sum(votes), 
        ratio = votes/total_votes,
        initialvotes = floor(ratio * total_electoral),
        remainder = ratio * total_electoral - initialvotes
        ) |> 
  mutate(remaining = total_electoral - sum(initialvotes)) |> 
  arrange(desc(remainder)) |> 
  mutate(additional = ifelse(row_number() <= remaining,1,0)) |> 
  mutate(propvotes = initialvotes + additional) |> 
  ungroup()
presidentNational |> 
  group_by(party_simplified, year) |> 
  summarise(propvotes = sum(propvotes)) |> 
  ggplot(aes(year, propvotes, fill = party_simplified)) +
  geom_col(position = position_dodge(), alpha = .9) +
  geom_label_repel(aes(label = propvotes), size = 3, show.legend = FALSE) +
  theme_minimal() +
  labs(title = "National Proportional", y = "Electoral Votes", fill = "Party")+
  scale_fill_manual(values = c("blue", "yellow", "green", "red"), labels = c("Democrat", "Libertarian", "Other", "Republican"))
```

## Results

While at least the first three voting systems produce the same results, it is very evident that the current system, winner takes all produces the most lopsided results. While some elections are certainly one-sided like Reagan vs Mondale, the current system far over compensates the more statewide popular candidate. While the electoral college was a staggering **525 vs 13!** , the national popular vote was far from that. While it was 59% vs 40%, a clear blowout, it is still far from the \~95% to Reagan approximated by the electoral college. The only system of the four that produces different results is the National Proportional allocation. This overturns the highly controversial 2000 Gore vs Bush election and the 2016 Clinton vs Trump election. While both systems 3 and 4 allow room for a third party candidate, National Proportional is truly the only way that is close to representing the overall nationwide vote of the country. One could argue that the founders intended it for not to be directly proportional, to give more power to some states or to restrict so called "mob rule" or the will of the populace. However in practice, the winner takes all system does not perform contrary to the popular vote about 9 times out of town, so that argument is pretty moot. What it really does is ensure that no competition can exist outside of two major political parties which presents multiple problems in modern politics. And on the rare occasion, the system does fail and the less popular candidate becomes president. I think it is clear that the fairest system while staying inside of the electoral college system is the National Proportional System.
